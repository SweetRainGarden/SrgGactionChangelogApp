# --------------------------------------------------------------------------------------------------
# Input: jira_domain, gh_token, and trigger keywords
# Process: 
# 1, extract jira ticket from dev's branch name, commits, pull request title, and pull request body
# 2, extract commit based git commit convention with: fix:feat:chore convention
# 3, append and inject the jira_domain into jira ticket of the step 2 in markdown format
# 4, check if trigger keywords are in pull request title or body. (Optional)
# Output: jira_tickets_list and absolute path of changelog.md 
# --------------------------------------------------------------------------------------------------
name: 'Srg auto collect changelog'
description: 'Auto collect changelog'
inputs:
  jira_domain:
    description: 'The company Jira domain'
    required: true
    default: 'srgxxxx.atlassian.net'
  gh_token:
    description: 'A Github token with read permission for repos'
    required: true
outputs:
  jira_ticket_list:
    description: "The jira tickets list form pull request and commit message"
    value: ${{ steps.export_outputs_step.outputs.jira_ticket_list }}
  srg_test_output:
    description: "Test Github action output"
    value: ${{ steps.export_outputs_step.outputs.srg_test_output }}
  srg_changelog_file:
    description: "The file that contains changelog of current pull request"
    value: ${{ steps.export_outputs_step.outputs.srg_changelog_file }}
runs:
  using: "composite"
  steps:
    - run: echo Hello ${{ inputs.jira_domain }}.
      shell: bash

    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash

    # - run: echo "${{ toJSON(github) }}"
    #   shell: bash

    - run: pwd
      shell: bash

    - name: "ZZZ -> Figure out Rnv --> 0: Pr event type"
      run: |
        echo "github event action: ${{github.event.action}}"
        if [[ "${{ github.event_name }}" == 'pull_request' && "${{github.event.pull_request.merged}}" == true && "${{github.event.action}}" == closed ]]; then
          echo "----------------------------> PR merged and closed. <----------------------------"
          echo "PR_STATE=CLOSED_AND_MERGED" >> $GITHUB_ENV
        elif [[ "${{ github.event_name }}" == 'pull_request' && "${{github.event.pull_request.merged}}" == false && "${{github.event.action}}" == closed ]]; then
          echo "----------------------------> PR closed without merging, do nothing. <----------------------------"
          echo "PR_STATE=CLOSED_BUT_NOT_MERGED" >> $GITHUB_ENV
        else
          echo "----------------------------> PR event action:${{github.event_name}} <----------------------------"
          echo "PR_STATE=COMMIT_PUSH" >> $GITHUB_ENV
        fi
      shell: bash

    - run: goodbye.sh
      shell: bash

    - name: "AAA -> init env --> 1: PR_CONTENT_TXT"
      run: |
        echo "SRG_PR_CONTENT_TXT=pr_and_branch_info.txt" >> $GITHUB_ENV
        echo "SRG_TEMP_FILE=temp.txt" >> $GITHUB_ENV
        echo "SRG_COMMITS_FILE=commits.txt" >> $GITHUB_ENV
        echo "SRG_CHANGLOG_FILE=changelog.md" >> $GITHUB_ENV
      shell: bash

    - run: |
        repo_org_name=$(get_repo_company_name.sh "SrgGactionChangelogApp")
        echo "repo_org_name --> $repo_org_name"
      shell: bash

    - run: |
        PR_NUMBER="${{ github.event.pull_request.number }}"
        REPO_NAME="${{ github.repository }}"
        API_URL="https://api.github.com/repos/$REPO_NAME/pulls/$PR_NUMBER/commits"
 
        curl -s -H "Authorization: token ${{ inputs.gh_token }}" -H "Accept: application/vnd.github+json" $API_URL > "${{ env.SRG_TEMP_FILE}}"

        PR_MERGED="${{ github.event.pull_request.merged }}"
        if [ "$PR_MERGED" = "true" ]; then
          jq_installed=$(command -v jq)
          if [ -z "$jq_installed" ]; then
            echo "jq is not installed on the machie, exit..." 
            exit 1
          fi

          cat "./${{ env.SRG_TEMP_FILE}}"
          echo "---------------------------------------------"
          cat "./${{ env.SRG_TEMP_FILE}}" | jq -r '.[] | "\(.sha) - \(.commit.message)"' > "./${{ env.SRG_COMMITS_FILE }}"
          cat "./${{ env.SRG_COMMITS_FILE }}"

        else
          echo "Pull request was not merged, unable to retrieve commits."
        fi
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == 'true' }}
      shell: bash

    - name: "GGG -> init env --> 2: write PR info in file: ${{ env.SRG_PR_CONTENT_TXT }}"
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == 'true' }}
      uses: DamianReeves/write-file-action@master
      with:
        path: "./${{ env.SRG_PR_CONTENT_TXT }}"
        contents: |
          "${{ github.head_ref }}"
          "${{ github.event.pull_request.title }}"
          "${{ github.event.pull_request.body }}"
        write-mode: overwrite

    - name: "extract jira ticket from pr and commits"
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == 'true' }}
      id: export_outputs_step
      run: |
        pwd
        pwd=$(pwd)
        echo "pwd -> $pwd"
        srg_changelog_abs_path="$(pwd)/${{ env.SRG_CHANGLOG_FILE }}"
        echo "jira_ticket_list=$(echo abc-$RANDOM)" >> $GITHUB_OUTPUT
        echo "srg_changelog_file=$srg_changelog_abs_path" >> $GITHUB_OUTPUT
        echo "srg_test_output=Hello_output_gaction" >> $GITHUB_OUTPUT
      shell: bash

    - name: "WWW -> Cat Files --> 0: txt files"
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == 'true' }}
      run: |
        echo "------------- pull_request closed and merged ------------"
        cat "${{ env.SRG_PR_CONTENT_TXT }}"
        echo "--------------------------------------"
        cat "${{ env.SRG_TEMP_FILE }}"
        echo "--------------------------------------"
        cat "${{ env.SRG_COMMITS_FILE }}"
        echo "--------------------------------------"
      shell: bash
    - name: "ZZZ -> Clean up --> 0: txt files"
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == 'true' }}
      run: |
        echo "------------- pull_request closed and merged ------------"
        rm -f "${{ env.SRG_PR_CONTENT_TXT }}"
        rm -f "${{ env.SRG_TEMP_FILE }}"
        rm -f "${{ env.SRG_COMMITS_FILE }}"
      shell: bash