name: 'Srg auto collect changelog'
description: 'Auto collect changelog'
inputs:
  jira-domain:  # id of input ddd
    description: 'The company Jira domain'
    required: true
    default: 'srgxxxx.atlassian.net'
outputs:
  jira_ticket_list:
    description: "The jira tickets list form pull request and commit message"
    value: ${{ steps.extract_jira_tickets.outputs.jira_ticket_list }}
runs:
  using: "composite"
  steps:
    - run: echo Hello ${{ inputs.jira_domain }}.
      shell: bash
    - id: extract_jira_tickets
      run: |
        echo "jira_ticket_list=$(echo abc-$RANDOM)" >> $GITHUB_OUTPUT
        echo " hello extract_jira_tickets step"

      shell: bash
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    # - run: echo "${{ toJSON(github) }}"
    #   shell: bash
    - run: pwd
      shell: bash

    - run: |
        echo "github event action: ${{github.event.action}}"

        if [[ "${{github.event.pull_request.merged}}" == true && "${{github.event.action}}" == closed ]]; then
          echo "----------------------------> PR merged and closed. <----------------------------"
          echo "PR_STATE=CLOSED_AND_MERGED" >> $GITHUB_ENV
        elif [[ "${{github.event.pull_request.merged}}" == false && "${{github.event.action}}" == closed ]]; then
          echo "----------------------------> PR closed without merging, do nothing. <----------------------------"
          echo "PR_STATE=CLOSED_BUT_NOT_MERGED" >> $GITHUB_ENV
        else
          echo "----------------------------> PR event action:${{github.event_name}} <----------------------------"
          echo "PR_STATE=COMMIT_PUSH" >> $GITHUB_ENV
        fi
      shell: bash

    - run: goodbye.sh
      shell: bash
    - run: get_repo_company_name.sh "SrgGactionChangelogApp"
      shell: bash
